// –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–≤—ã—á–µ–∫ –≤ JSON —Ñ–∞–π–ª–∞—Ö
const fs = require('fs');
const path = require('path');

// –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
const translationsDir = path.join(__dirname, 'src', 'translations');

// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö JSON-—Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
const files = fs.readdirSync(translationsDir)
  .filter(file => file.endsWith('.json') && file !== '.translation-hashes.json');

console.log(`üîç –ù–∞–π–¥–µ–Ω–æ ${files.length} —Ñ–∞–π–ª–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–æ–≤`);

// –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
let totalFilesFixed = 0;
let totalReplacements = 0;

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
files.forEach(file => {
  const filePath = path.join(translationsDir, file);
  
  try {
    // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
    let content = fs.readFileSync(filePath, 'utf8');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∫–∞–≤—ã—á–µ–∫
    if (content.includes('"Platforma tiek b≈´vƒìta"') || 
        content.includes('"Platform under construction"') ||
        content.includes('"–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"') ||
        content.includes('"Piattaforma in costruzione"') ||
        content.includes('"Plattform im Aufbau"')) {
      
      // –ó–∞–º–µ–Ω—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
      let newContent = content;
      
      // –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç—Ä–æ–∫
      const replacements = [
        { from: '"Platforma tiek b≈´vƒìta"', to: '\\"Platforma tiek b≈´vƒìta\\"' },
        { from: '"Platform under construction"', to: '\\"Platform under construction\\"' },
        { from: '"–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"', to: '\\"–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\\"' },
        { from: '"Piattaforma in costruzione"', to: '\\"Piattaforma in costruzione\\"' },
        { from: '"Plattform im Aufbau"', to: '\\"Plattform im Aufbau\\"' }
      ];
      
      let replacementCount = 0;
      
      replacements.forEach(({ from, to }) => {
        if (newContent.includes(from)) {
          newContent = newContent.replace(new RegExp(from.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'g'), to);
          replacementCount++;
        }
      });
      
      if (replacementCount > 0) {
        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª
        fs.writeFileSync(filePath, newContent, 'utf8');
        
        console.log(`‚úÖ ${file}: –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏`);
        
        totalFilesFixed++;
        totalReplacements += replacementCount;
      } else {
        console.log(`‚ÑπÔ∏è ${file}: –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –Ω–∞–π–¥–µ–Ω—ã, –Ω–æ –Ω–µ –∑–∞–º–µ–Ω–µ–Ω—ã`);
      }
    } else {
      console.log(`‚ÑπÔ∏è ${file}: –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∫–∞–≤—ã—á–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
    }
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –ø—Ä–æ–±—É–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON
    try {
      JSON.parse(fs.readFileSync(filePath, 'utf8'));
    } catch (parseError) {
      console.error(`‚ùå ${file}: JSON –Ω–µ–≤–∞–ª–∏–¥–µ–Ω –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π: ${parseError.message}`);
      
      // –ü–æ–ø—ã—Ç–∫–∞ –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è - –∑–∞–º–µ–Ω–∞ –≤—Å–µ—Ö –Ω–µ—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–∞–≤—ã—á–µ–∫ –≤–Ω—É—Ç—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–π
      let content = fs.readFileSync(filePath, 'utf8');
      
      // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–µ—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–∞–≤—ã—á–µ–∫ –≤–Ω—É—Ç—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏–π JSON
      const regex = /: ?"([^"]*)"([^"]*)"([^"]*)"/g;
      const fixedContent = content.replace(regex, (match, p1, p2, p3) => {
        return `: "${p1}\\"${p2}\\"${p3}"`;
      });
      
      fs.writeFileSync(filePath, fixedContent, 'utf8');
      console.log(`üîß ${file}: –ø—Ä–∏–º–µ–Ω–µ–Ω–æ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–≤—ã—á–µ–∫`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—â–µ —Ä–∞–∑
      try {
        JSON.parse(fs.readFileSync(filePath, 'utf8'));
        console.log(`‚úÖ ${file}: JSON —Ç–µ–ø–µ—Ä—å –≤–∞–ª–∏–¥–µ–Ω –ø–æ—Å–ª–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è`);
      } catch (e) {
        console.error(`‚ùå ${file}: JSON –≤—Å–µ –µ—â–µ –Ω–µ–≤–∞–ª–∏–¥–µ–Ω: ${e.message}`);
      }
    }
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${file}: ${error.message}`);
  }
});

console.log(`\nüìä –ò—Ç–æ–≥–∏:`);
console.log(`üìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${files.length}`);
console.log(`üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${totalFilesFixed}`);
console.log(`üîÑ –í—Å–µ–≥–æ –∑–∞–º–µ–Ω: ${totalReplacements}`);
