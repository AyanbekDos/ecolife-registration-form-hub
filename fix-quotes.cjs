// –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è &quot; –∏–∑ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
const fs = require('fs');
const path = require('path');

// –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
const translationsDir = path.join(__dirname, 'src', 'translations');

// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö JSON-—Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
const files = fs.readdirSync(translationsDir)
  .filter(file => file.endsWith('.json'));

console.log(`üîç –ù–∞–π–¥–µ–Ω–æ ${files.length} —Ñ–∞–π–ª–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–æ–≤`);

// –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
let totalFilesFixed = 0;
let totalReplacements = 0;

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
files.forEach(file => {
  const filePath = path.join(translationsDir, file);
  
  // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
  let content = fs.readFileSync(filePath, 'utf8');
  
  // –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–º–µ–Ω
  const occurrences = (content.match(/&quot;/g) || []).length;
  
  if (occurrences > 0) {
    // –ó–∞–º–µ–Ω—è–µ–º &quot; –Ω–∞ "
    const newContent = content.replace(/&quot;/g, '"');
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª
    fs.writeFileSync(filePath, newContent, 'utf8');
    
    console.log(`‚úÖ ${file}: –∑–∞–º–µ–Ω–µ–Ω–æ ${occurrences} –≤—Ö–æ–∂–¥–µ–Ω–∏–π &quot;`);
    
    totalFilesFixed++;
    totalReplacements += occurrences;
  } else {
    console.log(`‚ÑπÔ∏è ${file}: –≤—Ö–æ–∂–¥–µ–Ω–∏–π &quot; –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
  }
});

console.log(`\nüìä –ò—Ç–æ–≥–∏:`);
console.log(`üìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${files.length}`);
console.log(`üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${totalFilesFixed}`);
console.log(`üîÑ –í—Å–µ–≥–æ –∑–∞–º–µ–Ω: ${totalReplacements}`);
